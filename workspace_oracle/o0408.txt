

@파일명.sql - 확장자가 .sql인 파일 안에 있는 여러 개의 쿼리문을 일괄적으로 실행하는 명령

★★ 갈무리 기능 : 특정 시점으로부터의 모든 명령과 결과를 저장하도록 하는 방법
 - spool 파일명 -> spool 시작 명령 , 저장되는 파일 확장자는 sql이 아니라 lst로 저장됨
 - spool off -> 저장 완료 시점을 정하는 명령, 

-----출력 형식 지정
column 필드명 format 0,000,000 -> ex) 0,003,400 , 무효한 숫자의 자리를 0으로 채워준다.
column 필드명 format 9,999,999 -> 무효한 숫자의 자리는 사용하지 않는 방식
column 필드명 format $9,999,999 -> 숫자에 통화단위 $를 붙여서 표현하는 방식
column 필드명 format L9,999,999 -> 숫자에 현지역의 통화단위를 붙여서 표현하는 방식

column 필드명 format a10 -> 문자열 필드의 출력크기를 10으로 설정
column 필드명 format 9999999999 -> 숫자 필드의 출력크기를 10자리로 설정
column 필드명 format clear -> 설정된 컬럼의 출력형식을 지우고, 원래대로 돌린다.

set linsize 120 -> 한 라인에 들어오는 분자의 개수를 120으로 설정 (기본값:80)
set pagesize 20 -> 한 페이지에 들어가는 데이터의 개수를 20으로 설정 (기본값:10)

set heading off/on -> 필드명을 생략하고 출력,  on이 기본값
set timing on/off -> 쿼리의 실행시간을 출력(on), off가 기본값

★★★
< Oracle의 다양한 함수 >
- 문자 함수, 숫자 함수, 날짜 함수
(1) 문자 함수
- upper() : 대문자로 변환하는 함수
- lower() : 소문자로 변환하는 함수
- initcap() : 첫글자를 대문자로, 나머지를 소문자로 변환하는 함수

- length() : 문자열의 길이, 영어/한글 구분 없이 사용가능
- lengthb() : 문자열을 구성하는 바이트의 길이 영문은 한글자에 1바이트, 한글은 한글자에 3바이트로 취급

- concat() : 함수안에 나열한 문자열을 하나의 문자열로 합침
- substr(문자열, 시작위치, 개수) : 문자열의 시작위치에서 개수만큼 추출함.
- substrb(문자열, 시작위치, 개수) : 문자열을 바이트로 취급하여 시작위치에서 바이트만큼 추출함.

- instr() : 문자열에서 특정 문자의 위치를 찾음
 -- instr('Oracle Mania', 'a') -> 3, 처음으로 'a'가 나오는 위치
 -- instr('Oracle Mania', 'a', 5) -> 9, 5번 위치부터 'a'가 나오는 위치
 -- instr('Oracle Mania', 1, 3) -> 12, 1번 위치부터 'a'가 3번째로 나오는 위치

- lpad(문자열, 전체크기, 문자열2): 문자열의 왼쪽의 패딩을 문자열2로 채움
- rpad(문자열, 전체크기, 문자열2) : 문자열의 오른쪽의 패딩을 문자열2로 채움

- ltrim() : 문자열의 왼쪽 공백을 제거
- rtrim() : 문자열의 오른쪽 공백을 제거
- trim() : 문자열의 왼쪽과 오른쪽 공백을 모두 제거



문제1) 사원 테이블에서 사원명이 'SCOTT'인 사원의 정보를 확인하시오.
where ename = upper('scott');

문제2) 사원명이'A'로 시작하는 사원의 정보를 출력하시오.
- 2-1. substr() 함수를 사용
where substr(ename, 1, 1)='A';
- 2-2. instr() 함수를 사용
where instr(ename, 'A') = 1;

문제3) 사원명이 'S'로 끝나는 사원의 정보 출력
- like 연산자 사용
where ename like '%S';
- substr()함수 사용
where substr(ename, -1, 1) = 'S';

-------------------------------------------
(2) 숫자 함수
- 반올림, 버림, 나머지

- round() : 반올림하는 함수
- round(98.7654) -> 99
- round(98.7654, 2) -> 98.77 // 소수점 둘쨰자리 까지 표현
- round(98.7654, -1) -> 100 // 일의 자리에서 반올림
  9 8   .  7 6 5 4  
 -2 -1 0  1 2 3 4
- select hiredate, round(hiredate,'month') from employee; // 월을 반올림 할수도 있다.
-- -> 81/02/20 > 81/03/01

- trunc() : 무조건 버리는 함수
- trunc(98.7654) -> 98 // 소수점 이하를 버림
- trunc(98.7654, 2) -> 98.76 // 소수점 둘쨰자리 까지 표현
- trunc(98.7654, -1) -> 90 // 일의 자리까지 버림

- mod() : 나누기의 나머지를 구한다.
- mod(나누어지는수, 나누는 수)
- mod(10, 3) -> 1

------------------------------------------
(3) 날짜 함수
- 날짜는 +, -는 가능하지만, *, / 는 불가능
- sysdate : 현재 시스템의 날짜를 획득하는 함수
- round(날짜, 'month') : 일을 기준으로 반올림하여 월을 표현, 16일 기준으로 반올림
ex) 
round(to_date('2022/04/15'), 'month) -> 2022/04/01
round(to_date('2022/04/15'), 'month) -> 2022/05/01

- trunc(날짜, 'month') : 일을 기준으로 버리고 날짜를 표현
ex)
trunc(to_date('2022/04/17'), 'month) -> 2022/04/01

- months_between(날짜1, 날짜2) : 날짜1과 날짜2 사이의 개월수를 구함 // 날짜1-날짜2

- add_months(날짜, 개월수) : 날짜에 개월수를 더한 날짜를 구함
 -- 개월수에 음수를 사용하면 다음이 아닌 이전날짜가 된다.
ex)
add_months(sysdate, 3) -> 오늘부터 3개월후 날짜
add_months(sysdate,-6) -> 오늘부터 6개월 전 날짜

- next_day(날짜, 요일) : 날짜로부터 다가오는 요일의 날짜를 구함
ex)
next_day(sysdate, '토요일') -> 오늘로부터 먼저 다가오는 토요일의 날짜

- last_day(날짜) : 날짜의 월의 마지막 일자를 출력
ex)
last_day(2022/04/09) -> 2022/04/30


문제4) 사원 테이블에서 각 사원의 근무일수를 구하여 소숫점을 제거하고 출력하시오. 사번, 사원명, 
입사일, 근무일수로 알리아스를 설정
select eno 사번, ename 이름, hiredate 입사일, sysdate-hiredate 근무일수 from employee
order by 근무일수 desc;

문제5) 사원 테이블에서 각 사원 근무개월수를 구하여 출력하시오.

문제6) 사원 테이블에서 각사원의 근무 년수를 구하여 출력


--------------------------------------------------
(4)형 변환 함수
- 문자형 변환 함수(숫자, 날짜), 숫자형 변환 함수('10'), 날짜형 변환 함수('22/04/04')

- to_char() : 숫자와 날짜를 문자열 형태로 변환하는 함수, 홀따옴표로 감싸서 표현
- 날짜를 다양한 형식으로 표현할 때 많이 사용함
-- 1. 날짜와 관련된 서식 --
- yy: 년도 2자리, yyyy: 년도 4자리, mm: 월2자리, dd:월2자리, dd: 일2자리, day: 긴 요일
- dy: 짧은 요일, hh: 12시간, hh24: 24시간, mi: 분, ss: 초, am또는 pm: 오전 오후 표시
select sysdate, to_char(sysdate, 'yyyy-mm-dd dy') from dual -> 2022-04-08 금
select sysdate, to_char(sysdate, 'yyyy-mm-dd day') from dual -> 2022-04-08 금요일 
select sysdate, to_char(sysdate, 'yyyy-mm-dd am hh:mi:ss') from dual -> 2022-04-08 오후 04:34:52
select sysdate, to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss') from dual -> 2022-04-08 16:34:52

-- 2. 숫자와 관련된 서식 -- 
0 - 무효한 자리의 값을 0으로 표현
9 - 무효한 자리의 값은 쓰지 않음
$ - 숫자 앞에 $ 통화기호 표시
L - 숫자 앞에 해당 지역의 통화기호 표시
ex)
to_char(34567.1234, '9,999,999') -> 34,567
to_char(4567.1234, '0,000,000') -> 0,004,567
to_char(34567.1234, '$9,999,999') -> $34,567
to_char(34567.1234, 'L9,999,999') -> \34,567


---------------------------
(5) 기타 다양한 함수 
null값을 연산하면 null되기 때문에 null값을 바꾸어 주는 함수가 필요

★★★
nvl()함수 : null 값을 지정한 값으로 바꾸어 주는 함수
- nvl(필드명, 0) -> 필드명에 해당하는 값이 null일때 값을 0으로 바꾸어 준다.

nvl2()함수: 필드명의 값이 null일 떄 지정한 값으로 바꾸어 주는 함수
- nvl2(필드명, 값1, 값2) -> 필드명에 해당하는 값이 null이 아닐때 값2을 사용하고, null일 떄 값1를 사용하는 함수

nullif()함수: 두 값의 값을 비교하여 같다면 null을 반환하고, 같지 않으면 첫번째 값을 반환하는 함수
- nullif(값1, 값2) 

문제7) 사원 테이블에서 업무가 'SALESMAN'일 때 '보너스 대상'이라는 문자열을 출력하고,
그렇지 않을 때는 '해당 없음'이라는 문자열을 출력하시오.
사번, 사원명, 업무, 보너스 여부라는 별칭을 사용하시오.

< 4/8 과제 >
과제1) 사원 테이블에서 사번, 사원명, 업무, 연봉, 입사일, 근무일수, 근무월수, 근무년수를 출력하시오.
- 알리아스를 사용하시오.
- 근무일수 반올림하여 정수로 표시하시오.
- 근무월수는 소수점 둘째자리에서 버림하시오.
- 근무년수는 소수점 둘째자리까지 반올림하여 표시하시오.
- 연봉이 높은 순으로, 연봉이 같다면, 근무일수가 많은 순으로 출력하시오.

과제2) 사원 테이블에서 사번, 사원명, 입사일, 연봉, 성과급, 총연봉을 출력하시오.
- 알리아스를 사용하시오.
- 값이 널일 경우에는 0으로 출력하시오.
- 입사일은 제시하는 형식으로 출력하시오. ex) 2022년 04월 08일
- 연봉, 성과급, 총연봉은 천단위 구분기호를 사용하고, 지역의 통화기호를 사용하시오.

과제3) 사원 테이블에서 부서번호가 10인 부서는 '서울 근무 대상', 타 부서번호는 '수도권 근무 대상'이라고 출력하시오.
- 출력은 사번, 사원명, 업무, 부서번호, 근무 지역으로 알리아스를 사용
- 근무지역의 오름차순으로 정렬하여 출력하시오.






SQL의 꽃 Join, 서브쿼리
트랜잭션, PL-SQL, 프로시저







